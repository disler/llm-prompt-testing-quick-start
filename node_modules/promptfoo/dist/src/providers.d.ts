import { OpenAiAssistantProvider, OpenAiCompletionProvider, OpenAiChatCompletionProvider } from './providers/openai';
import { AnthropicCompletionProvider } from './providers/anthropic';
import { ReplicateProvider } from './providers/replicate';
import { LocalAiCompletionProvider, LocalAiChatProvider } from './providers/localai';
import type { ApiProvider, EnvOverrides, ProviderOptions, TestSuiteConfig } from './types';
export declare function loadApiProviders(providerPaths: TestSuiteConfig['providers'], options?: {
    basePath?: string;
    env?: EnvOverrides;
}): Promise<ApiProvider[]>;
export declare function loadApiProvider(providerPath: string, context?: {
    options?: ProviderOptions;
    basePath?: string;
    env?: EnvOverrides;
}): Promise<ApiProvider>;
declare const _default: {
    OpenAiCompletionProvider: typeof OpenAiCompletionProvider;
    OpenAiChatCompletionProvider: typeof OpenAiChatCompletionProvider;
    OpenAiAssistantProvider: typeof OpenAiAssistantProvider;
    AnthropicCompletionProvider: typeof AnthropicCompletionProvider;
    ReplicateProvider: typeof ReplicateProvider;
    LocalAiCompletionProvider: typeof LocalAiCompletionProvider;
    LocalAiChatProvider: typeof LocalAiChatProvider;
    loadApiProvider: typeof loadApiProvider;
};
export default _default;
//# sourceMappingURL=providers.d.ts.map