"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LlamaProvider = void 0;
const cache_1 = require("../cache");
const shared_1 = require("./shared");
class LlamaProvider {
    constructor(modelName, options = {}) {
        const { config, id } = options;
        this.modelName = modelName;
        this.config = config;
        this.id = id ? () => id : this.id;
    }
    id() {
        return `llama:${this.modelName}`;
    }
    toString() {
        return `[Llama Provider ${this.modelName}]`;
    }
    async callApi(prompt) {
        const body = {
            prompt,
            n_predict: this.config?.n_predict || 512,
            temperature: this.config?.temperature,
            top_k: this.config?.top_k,
            top_p: this.config?.top_p,
            n_keep: this.config?.n_keep,
            stop: this.config?.stop,
            repeat_penalty: this.config?.repeat_penalty,
            repeat_last_n: this.config?.repeat_last_n,
            penalize_nl: this.config?.penalize_nl,
            presence_penalty: this.config?.presence_penalty,
            frequency_penalty: this.config?.frequency_penalty,
            mirostat: this.config?.mirostat,
            mirostat_tau: this.config?.mirostat_tau,
            mirostat_eta: this.config?.mirostat_eta,
            seed: this.config?.seed,
            ignore_eos: this.config?.ignore_eos,
            logit_bias: this.config?.logit_bias,
        };
        let response;
        try {
            response = await (0, cache_1.fetchWithCache)(`${process.env.LLAMA_BASE_URL || 'http://localhost:8080'}/completion`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(body),
            }, shared_1.REQUEST_TIMEOUT_MS);
        }
        catch (err) {
            return {
                error: `API call error: ${String(err)}`,
            };
        }
        try {
            return {
                output: response.data.content,
            };
        }
        catch (err) {
            return {
                error: `API response error: ${String(err)}: ${JSON.stringify(response.data)}`,
            };
        }
    }
}
exports.LlamaProvider = LlamaProvider;
//# sourceMappingURL=llama.js.map