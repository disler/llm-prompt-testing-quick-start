import { ApiProvider, EnvOverrides, ProviderResponse } from '../types';
interface MistralChatCompletionOptions {
    apiKey?: string;
    temperature?: number;
    top_p?: number;
    max_tokens?: number;
    safe_prompt?: boolean;
    random_seed?: number;
    fix_json?: boolean;
    cost?: number;
}
export declare class MistralChatCompletionProvider implements ApiProvider {
    modelName: string;
    config: MistralChatCompletionOptions;
    env?: EnvOverrides;
    static MISTRAL_CHAT_MODELS: {
        id: string;
        cost: {
            input: number;
            output: number;
        };
    }[];
    static MISTRAL_CHAT_MODELS_NAMES: string[];
    constructor(modelName: string, options?: {
        id?: string;
        config?: MistralChatCompletionOptions;
        env?: EnvOverrides;
    });
    id(): string;
    toString(): string;
    getApiKey(): string | undefined;
    callApi(prompt: string): Promise<ProviderResponse>;
}
export {};
//# sourceMappingURL=mistral.d.ts.map