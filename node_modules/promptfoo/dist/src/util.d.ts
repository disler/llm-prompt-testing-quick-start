import nunjucks from 'nunjucks';
import type { EvalWithMetadata, EvaluateSummary, EvaluateTable, NunjucksFilterMap, PromptWithMetadata, ResultsFile, TestCase, TestCasesWithMetadata, UnifiedConfig } from './types';
export declare function resetGlobalConfig(): void;
export declare function readGlobalConfig(): any;
export declare function maybeRecordFirstRun(): boolean;
export declare function maybeReadConfig(configPath: string): Promise<UnifiedConfig | undefined>;
export declare function dereferenceConfig(rawConfig: UnifiedConfig): Promise<UnifiedConfig>;
export declare function readConfig(configPath: string): Promise<UnifiedConfig>;
export declare function readConfigs(configPaths: string[]): Promise<UnifiedConfig>;
export declare function writeMultipleOutputs(outputPaths: string[], results: EvaluateSummary, config: Partial<UnifiedConfig>, shareableUrl: string | null): void;
export declare function writeOutput(outputPath: string, results: EvaluateSummary, config: Partial<UnifiedConfig>, shareableUrl: string | null): void;
export declare function getConfigDirectoryPath(): string;
export declare function setConfigDirectoryPath(newPath: string): void;
export declare function getLatestResultsPath(): string;
export declare function writeLatestResults(results: EvaluateSummary, config: Partial<UnifiedConfig>): void;
export declare function listPreviousResultFilenames(): string[];
export declare function listPreviousResults(): {
    fileName: string;
    description?: string;
}[];
export declare function cleanupOldResults(remaining?: number): void;
export declare function filenameToDate(filename: string): string;
export declare function dateToFilename(date: Date): string;
export declare function readResult(name: string): {
    id: string;
    result: ResultsFile;
    createdAt: Date;
} | undefined;
export declare function updateResult(filename: string, newTable: EvaluateTable): void;
export declare function readLatestResults(): ResultsFile | undefined;
export declare function getPromptsForTestCases(testCases: TestCase[]): PromptWithMetadata[];
export declare function getPromptsForTestCasesHash(testCasesSha256: string): PromptWithMetadata[];
export declare function sha256(str: string): string;
export declare function getPrompts(): PromptWithMetadata[];
export declare function getPromptsWithPredicate(predicate: (result: ResultsFile) => boolean): PromptWithMetadata[];
export declare function getTestCases(): TestCasesWithMetadata[];
export declare function getTestCasesWithPredicate(predicate: (result: ResultsFile) => boolean): TestCasesWithMetadata[];
export declare function getPromptFromHash(hash: string): PromptWithMetadata | undefined;
export declare function getDatasetFromHash(hash: string): TestCasesWithMetadata | undefined;
export declare function getEvals(): EvalWithMetadata[];
export declare function getEvalFromHash(hash: string): EvalWithMetadata | undefined;
export declare function getEvalsWithPredicate(predicate: (result: ResultsFile) => boolean): EvalWithMetadata[];
export declare function readFilters(filters: Record<string, string>, basePath?: string): NunjucksFilterMap;
export declare function getNunjucksEngine(filters?: NunjucksFilterMap): nunjucks.Environment | {
    renderString: (template: string) => string;
};
export declare function printBorder(): void;
export declare function transformOutput(code: string, output: string | object | undefined, context: unknown): any;
//# sourceMappingURL=util.d.ts.map